swagger: '2.0'

info:
  title: 'Digital Health Revolution - MyData Account'
  description:
    ' #### MyData-SDK - MyData Account API - External '
  version: '1.2'
  contact:
    url: 'https://github.com/HIIT/mydata-stack'
  license:
    name: 'MIT License (MIT)'
    url: 'https://opensource.org/licenses/MIT'

host: 127.0.0.1:8080

schemes:
  - https

basePath: '/api/external/'

consumes:
  - application/json

produces:
  - application/json

securityDefinitions:
  externalApiKeyAuth:
    type: apiKey
    name: Api-Key
    in: header
    description: Authentication using apiKey for external use

  BasicAuth:
    type: basic
    description: HTTP Basic Auth

externalDocs:
  description: 'External documentation'
  url: 'https://github.com/HIIT/mydata-stack'

paths:

  /auth/account/:
    get:
      security:
        - BasicAuth: []
      summary: 'Get ApiKey for account'

      tags:
        - Auth
        - ApiKey

      responses:
        '200':
          description: ApiKey for authenticated user
          schema:
            $ref: '#/definitions/apiKeyResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server error
          schema:
            $ref: '#/definitions/errors'


  /accounts/:
    post:
      summary: 'Create new MyData Account'

      parameters:
        - name: newAccount
          in: body
          description: 'Base information for account'
          required: true
          schema:
            $ref: '#/definitions/newAccountRequest'

      tags:
        - Account

      responses:
        '201':
          description: Account created
          schema:
            $ref: '#/definitions/newAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      summary: 'Fetch MyData Account by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account

      responses:
        '200':
          description: Account fetched
          schema:
            $ref: '#/definitions/accountResponse'
        '204':
          description: No Account with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/tiny/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch tiny Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account

      responses:
        '200':
          description: Account fetched
          schema:
            $ref: '#/definitions/tinyAccountResponse'
        '204':
          description: No Account with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/activate/:
    patch:
      security:
        - externalApiKeyAuth: []
      description: 'Activate Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: payload
          in: body
          description: 'Activation Token for Account'
          required: true
          schema:
            $ref: '#/definitions/activateAccountRequest'

      tags:
        - Account

      responses:
        '200':
          description: Account activated
          schema:
            $ref: '#/definitions/activateAccountResponse'
        '204':
          description: No Account with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/particulars/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Particulars related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account
        - Particular

      responses:
        '200':
          description: Particulars fetched
          schema:
            $ref: '#/definitions/particularsResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/particulars/{particular_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Particular by ID related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: particular_id
          in: path
          type: integer
          description: 'Particular ID'
          required: true

      tags:
        - Account
        - Particular

      responses:
        '200':
          description: Particulars fetched
          schema:
            $ref: '#/definitions/particularResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    patch:
      security:
        - externalApiKeyAuth: []
      description: 'Update particulars'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: particular_id
          in: path
          type: integer
          description: 'Particular ID'
          required: true
        - name: payload
          in: body
          description: 'Resource content'
          required: true
          schema:
            $ref: '#/definitions/updateParticularRequest'

      tags:
        - Account
        - Particular

      responses:
        '200':
          description: Particulars updated
          schema:
            $ref: '#/definitions/updateParticularResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/contacts/:
    post:
      security:
        - externalApiKeyAuth: []
      description: 'Create Contacts entry'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: newContact
          in: body
          description: 'Base information for Contacts entry'
          required: true
          schema:
            $ref: '#/definitions/newContactRequest'

      tags:
        - Account
        - Contact

      responses:
        '201':
          description: Contacts entry created
          schema:
            $ref: '#/definitions/newContactResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of particulars related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account
        - Contact

      responses:
        '200':
          description: Contacts fetched
          schema:
            $ref: '#/definitions/contactsResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/contacts/{contact_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Contact entry by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: contact_id
          in: path
          type: integer
          description: 'Contact ID'
          required: true

      tags:
        - Account
        - Contact

      responses:
        '200':
          description: Contacts fetched
          schema:
            $ref: '#/definitions/contactResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    patch:
      security:
        - externalApiKeyAuth: []
      description: 'Update contacts'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: contact_id
          in: path
          type: integer
          description: 'Contact ID'
          required: true
        - name: payload
          in: body
          description: 'Resource content'
          required: true
          schema:
            $ref: '#/definitions/updateContactRequest'

      tags:
        - Account
        - Contact

      responses:
        '200':
          description: Contacts updated
          schema:
            $ref: '#/definitions/updateContactResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    delete:
      security:
        - externalApiKeyAuth: []
      description: 'Delete Contact by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: contact_id
          in: path
          type: integer
          description: 'Contacts ID'
          required: true

      tags:
        - Account
        - Contact

      responses:
        '204':
          description: Contact entry deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/telephones/:
    post:
      security:
        - externalApiKeyAuth: []
      description: 'Create Telephone entry'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: newTelephone
          in: body
          description: 'Base information for telephone entry'
          required: true
          schema:
            $ref: '#/definitions/newTelephoneRequest'

      tags:
        - Account
        - Telephone

      responses:
        '201':
          description: Telephone entry created
          schema:
            $ref: '#/definitions/newTelephoneResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of telephone numbers related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account
        - Telephone

      responses:
        '200':
          description: Telephones fetched
          schema:
            $ref: '#/definitions/telephonesResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/telephones/{telephone_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Telephones by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: telephone_id
          in: path
          type: integer
          description: 'Telephone ID'
          required: true

      tags:
        - Account
        - Telephone

      responses:
        '200':
          description: Telephones fetched
          schema:
            $ref: '#/definitions/telephoneResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    patch:
      security:
        - externalApiKeyAuth: []
      description: 'Update Telephone entry'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: telephone_id
          in: path
          type: integer
          description: 'Telephone ID'
          required: true
        - name: payload
          in: body
          description: 'Resource content'
          required: true
          schema:
            $ref: '#/definitions/updateTelephoneRequest'

      tags:
        - Account
        - Telephone

      responses:
        '200':
          description: Thelephone updated
          schema:
            $ref: '#/definitions/updateTelephoneResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    delete:
      security:
        - externalApiKeyAuth: []
      description: 'Delete Telephone by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: telephone_id
          in: path
          type: integer
          description: 'Telephone ID'
          required: true

      tags:
        - Account
        - Telephone

      responses:
        '204':
          description: Telephone entry deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/emails/:
    post:
      security:
        - externalApiKeyAuth: []
      description: 'Create Email entry'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: newEmail
          in: body
          description: 'Base information for email entry'
          required: true
          schema:
            $ref: '#/definitions/newEmailRequest'

      tags:
        - Account
        - Email

      responses:
        '201':
          description: Emails entry created
          schema:
            $ref: '#/definitions/newEmailResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of email addresses related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account
        - Email

      responses:
        '200':
          description: Emails fetched
          schema:
            $ref: '#/definitions/emailsResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/emails/{email_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Emails by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: email_id
          in: path
          type: integer
          description: 'Email ID'
          required: true

      tags:
        - Account
        - Email

      responses:
        '200':
          description: Emails fetched
          schema:
            $ref: '#/definitions/emailResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    patch:
      security:
        - externalApiKeyAuth: []
      description: 'Update Email'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: email_id
          in: path
          type: integer
          description: 'Email ID'
          required: true
        - name: payload
          in: body
          description: 'Resource content'
          required: true
          schema:
            $ref: '#/definitions/updateEmailRequest'

      tags:
        - Account
        - Email

      responses:
        '200':
          description: Email updated
          schema:
            $ref: '#/definitions/updateEmailResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    delete:
      security:
        - externalApiKeyAuth: []
      description: 'Delete Email by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: email_id
          in: path
          type: integer
          description: 'Email ID'
          required: true

      tags:
        - Account
        - Email

      responses:
        '204':
          description: Email entry deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/settings/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch settings related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account
        - Settings

      responses:
        '200':
          description: Settings fetched
          schema:
            $ref: '#/definitions/settingsResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/settings/{setting_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch setting by ID related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: setting_id
          in: path
          type: integer
          description: 'Setting ID'
          required: true

      tags:
        - Account
        - Settings

      responses:
        '200':
          description: Settings fetched
          schema:
            $ref: '#/definitions/settingResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    patch:
      security:
        - externalApiKeyAuth: []
      description: 'Update settings'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: setting_id
          in: path
          type: integer
          description: 'Setting ID'
          required: true
        - name: payload
          in: body
          description: 'Resource content'
          required: true
          schema:
            $ref: '#/definitions/updateSettingRequest'

      tags:
        - Account
        - Settings

      responses:
        '200':
          description: Settings updated
          schema:
            $ref: '#/definitions/updateSettingResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'

    delete:
      security:
        - externalApiKeyAuth: []
      description: 'Delete Setting by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: setting_id
          in: path
          type: integer
          description: 'Setting ID'
          required: true

      tags:
        - Account
        - Settings

      responses:
        '204':
          description: Setting entry deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'



  /accounts/{account_id}/servicelinks/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of Service links related to Account'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true

      tags:
        - Account
        - Service Link

      responses:
        '200':
          description: Service link fetched
          schema:
            $ref: '#/definitions/serviceLinksResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Service Link by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true

      tags:
        - Account
        - Service Link

      responses:
        '200':
          description: Service link fetched
          schema:
            $ref: '#/definitions/serviceLinkResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/statuses/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of Service Link statuses'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true

      tags:
        - Account
        - Service Link
        - Status

      responses:
        '200':
          description: List of Service Link statuses fetched
          schema:
            $ref: '#/definitions/serviceLinkStatusesResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/statuses/{status_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Service Link status by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true
        - name: status_id
          in: path
          type: integer
          description: 'Service link status ID'
          required: true

      tags:
        - Account
        - Service Link
        - Status

      responses:
        '200':
          description: Service link status fetched
          schema:
            $ref: '#/definitions/serviceLinkStatusResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/consents/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of Consents related to servicelink'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true

      tags:
        - Account
        - Consent

      responses:
        '200':
          description: List of Consents related to servicelink fetched
          schema:
            $ref: '#/definitions/consentsResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/consents/{consent_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Consent by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true
        - name: consent_id
          in: path
          type: integer
          description: 'Consent ID'
          required: true

      tags:
        - Account
        - Service Link
        - Status

      responses:
        '200':
          description: Consent fetched
          schema:
            $ref: '#/definitions/consentResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/consents/{consent_id}/statuses/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch list of Consent statuses'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true
        - name: consent_id
          in: path
          type: integer
          description: 'Consent ID'
          required: true

      tags:
        - Account
        - Consent
        - Status

      responses:
        '200':
          description: List of Consent statuses fetched
          schema:
            $ref: '#/definitions/consentStatusesResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'


  /accounts/{account_id}/servicelinks/{servicelink_id}/consents/{consent_id}/statuses/{status_id}/:
    get:
      security:
        - externalApiKeyAuth: []
      description: 'Fetch Consent by ID'

      parameters:
        - name: account_id
          in: path
          type: integer
          description: 'Account ID'
          required: true
        - name: servicelink_id
          in: path
          type: integer
          description: 'Service link ID'
          required: true
        - name: consent_id
          in: path
          type: integer
          description: 'Consent ID'
          required: true
        - name: status_id
          in: path
          type: integer
          description: 'Status ID'
          required: true

      tags:
        - Account
        - Consent
        - Status

      responses:
        '200':
          description: Consent fetched
          schema:
            $ref: '#/definitions/consentStatusResponse'
        '204':
          description: No content with given id
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/errors'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errors'
        '500':
          description: Internal Server errors
          schema:
            $ref: '#/definitions/errors'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errors'



definitions:

  errors:
    type: array
    items:
      type: object
      properties:
        status:
          type: string
          description: HTTP status code as string value.
        code:
          type: integer
          description: HTTP status code
        title:
          type: string
          description: Title of error message.
        detail:
          type: string
          description: Detailed error message.
        source:
          type: object
          properties:
            pointer:
              type: string
              description: Source URI

  apiKeyResponse:
    type: object
    properties:
      Api-Key:
        type: string
        description: ApiKey

  newAccount:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Account'
      attributes:
        type: object
        properties:
          username:
            type: string
            description: Account username
            maxLength: 255
          password:
            type: string
            format: password
            description: Account password
            maxLength: 255
            minLength: 8
          firstName:
            type: string
            description: User's first name
            maxLength: 255
          lastName:
            type: string
            description: User's last name
            maxLength: 255
          email:
            type: string
            format: email
            description: User's email
            maxLength: 255
          dateOfBirth:
            type: string
            format: date
            description: User's date of birth
          acceptTermsOfService:
            type: boolean
            description: 'True if user accepts terms of usage'

  createdAccount:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Account'
      id:
        type: integer
        description: Account ID
      attributes:
        type: object
        properties:
          username:
            type: string
            description: Account username
          firstName:
            type: string
            description: User's first name
          lastName:
            type: string
            description: User's last name
          email:
            type: string
            format: email
            description: User's email
          dateOfBirth:
            type: string
            format: date
            description: User's date of birth
          acceptTermsOfService:
            type: boolean
            description: 'True if user accepts terms of usage'

  account:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Account'
      id:
        type: integer
        description: Account ID
      attributes:
        type: object
        properties:
          Particulars:
            $ref: '#/definitions/particular'
          Contacts:
            type: array
            items:
              $ref: '#/definitions/contact'
          Telephones:
            type: array
            items:
              $ref: '#/definitions/telephone'
          Emails:
            type: array
            items:
              $ref: '#/definitions/email'
          Settings:
            type: array
            items:
              $ref: '#/definitions/setting'

  tinyAccount:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'TinyAccount'
      id:
        type: integer
        description: Account ID
      attributes:
        type: object
        properties:
          username:
            type: string
            description: Account username
          firstName:
            type: string
            description: User's first name
          lastName:
            type: string
            description: User's last name
          email:
            type: string
            format: email
            description: User's email
          img:
            type: string
            description: 'Baase64 avatar image'

  particular:
    type: object
    description: "Account owner's personal information"
    properties:
      type:
        type: string
        description: Resource type 'Particular'
      id:
        type: integer
        description: Particular ID
      attributes:
        type: object
        properties:
          firstName:
            type: string
            description: First name
          lastName:
            type: string
            description: Last name
          dateOfBirth:
            type: string
            format: date
            description: Date of birth
          img:
            type: string
            description: 'Base64 avatar image'


  newContact:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Contact'
      attributes:
        type: object
        properties:
          address1:
            type: string
            description: 'Address 1'
          address2:
            type: string
            description: 'Address 2'
          postalCode:
            type: string
            description: 'Postal Code'
          city:
            type: string
            description: 'City'
          state:
            type: string
            description: 'State'
          country:
            type: string
            description: 'Country'
          type:
            type: string
            description: 'Contact Type (Home / Work)'
          primary:
            type: boolean
            description: 'Is primary'


  contact:
    type: object
    description: "Account owner's contact details"
    properties:
      type:
        type: string
        description: Resource type 'Contact'
      id:
        type: integer
        description: Contact ID
      attributes:
        type: object
        properties:
          address1:
            type: string
            description: 'Address 1'
          address2:
            type: string
            description: 'Address 2'
          postalCode:
            type: string
            description: 'Postal Code'
          city:
            type: string
            description: 'City'
          state:
            type: string
            description: 'State'
          country:
            type: string
            description: 'Country'
          type:
            type: string
            description: 'Contact Type (Home / Work)'
          primary:
            type: boolean
            description: 'Is primary'


  newTelephone:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Telephone'
      attributes:
        type: object
        properties:
          tel:
            type: string
            description: 'Telephone number'
          type:
            type: string
            description: 'Telephone type (Home / Work)'
          primary:
            type: boolean
            description: 'Is primary'


  telephone:
    type: object
    description: "Account owner's telephone number"
    properties:
      type:
        type: string
        description: Resource type 'Telephone'
      id:
        type: integer
        description: Telephone ID
      attributes:
        type: object
        properties:
          tel:
            type: string
            description: 'Telephone number'
          type:
            type: string
            description: 'Telephone type (Home / Work)'
          primary:
            type: boolean
            description: 'Is primary'


  newEmail:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Email'
      attributes:
        type: object
        properties:
          email:
            type: string
            description: 'Email address'
          type:
            type: string
            description: 'Email type (Home / Work)'
          primary:
            type: boolean
            description: 'Is primary'


  email:
    type: object
    description: "Account owner's email address"
    properties:
      type:
        type: string
        description: Resource type 'Email'
      id:
        type: integer
        description: Email ID
      attributes:
        type: object
        properties:
          email:
            type: string
            description: 'Email address'
          type:
            type: string
            description: 'Email type (Home / Work)'
          primary:
            type: boolean
            description: 'Is primary'


  setting:
    type: object
    description: "Account owner's stored settings as key-value pairs"
    properties:
      type:
        type: string
        description: Resource type 'Setting'
      id:
        type: integer
        description: Setting ID
      attributes:
        type: object
        properties:
          key:
            type: string
            description: 'Key for setting value'
          value:
            type: string
            description: 'Setting value'


  newAccountRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/newAccount'


  newAccountResponse:
    type: object
    properties:
      meta:
        type: object
        properties:
          activationInstructions:
            type: object
            description: Instructions for account activation
      data:
        $ref: '#/definitions/createdAccount'


  activateAccountRequest:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            type: string
            description: Resource type 'AccountActivation'
          id:
            type: integer
            description: Account ID
          attributes:
            type: object
            properties:
              activationToken:
                type: string
                description: Activation Token for Account


  activateAccountResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            type: string
            description: Resource type 'AccountActivation'
          id:
            type: integer
            description: Account ID
          attributes:
            type: object
            properties:
              activationStatus:
                type: string
                description: 'Activation status'


  accountResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/account'


  tinyAccountResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/tinyAccount'


  particularsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/particular'


  particularResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/particular'


  updateParticularRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/particular'


  updateParticularResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/particular'


  newContactRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/newContact'


  newContactResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/contact'


  contactsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/contact'


  contactResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/contact'


  updateContactRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/contact'


  updateContactResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/contact'



  newTelephoneRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/newTelephone'


  newTelephoneResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/telephone'


  telephonesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/telephone'


  telephoneResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/telephone'


  updateTelephoneRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/telephone'


  updateTelephoneResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/telephone'



  newEmailRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/newEmail'


  newEmailResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/email'


  emailsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/email'


  emailResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/email'


  updateEmailRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/email'


  updateEmailResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/email'



  settingsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/setting'


  settingResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/setting'


  updateSettingRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/setting'


  updateSettingResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/setting'


  serviceLink:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'ServiceLink'
      id:
        type: integer
        description: Service Link ID
      attributes:
        type: object
        properties:
          serviceLinkRecordId:
            type: string
            description: 'Service Link Record ID'
          serviceId:
            type: string
            description: 'Related Service ID'
          surrogateId:
            type: string
            description: 'Related Surrogate ID'
          serviceLinkRecord:
            type: object
            description: 'Service Link Record as JWS - [MyData Service Linking Specification] (https://github.com/HIIT/mydata-stack)'


  serviceLinksResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/serviceLink'


  serviceLinkResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/serviceLink'


  serviceLinkStatus:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'ServiceLinkStatus'
      id:
        type: integer
        description: Service Link Status Record ID
      attributes:
        type: object
        properties:
          status:
            type: string
            description: "Service Link's status"
          serviceLinkStatusRecord:
            type: object
            description: 'Service Link Status Record as JWS - [MyData Service Linking Specification] (https://github.com/HIIT/mydata-stack)'


  serviceLinkStatusesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/serviceLinkStatus'


  serviceLinkStatusResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/serviceLinkStatus'


  consent:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'Consent'
      id:
        type: integer
        description: Consent ID
      attributes:
        type: object
        properties:
          serviceLinkRecordId:
            type: string
            description: 'Related Service Record ID'
          serviceId:
            type: string
            description: 'Related Service ID'
          surrogateId:
            type: string
            description: 'Related Surrogate ID'
          consentRecordId:
            type: string
            description: 'Consent Record ID'
          consentRecord:
            type: object
            description: 'Consent Record as JWS - [MyData Authorization Specification] (https://github.com/HIIT/mydata-stack)'


  consentsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/consent'


  consentResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/consent'


  consentStatus:
    type: object
    properties:
      type:
        type: string
        description: Resource type 'ConsentStatus'
      id:
        type: integer
        description: Consent Status ID
      attributes:
        type: object
        properties:
          status:
            type: string
            description: "Consent's status"
          consentStatusRecord:
            type: object
            description: 'Consent Status Record as JWS - [MyData Authorization Specification] (https://github.com/HIIT/mydata-stack)'


  consentStatusesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/consentStatus'


  consentStatusResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/consentStatus'

